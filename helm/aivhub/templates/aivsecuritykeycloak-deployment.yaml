{{- if .Values.aivsecuritykeycloak.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ template "aivhub.fullname" . }}-aivkeycloak
  name: {{ template "aivhub.fullname" . }}-aivkeycloak
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.aivsecuritykeycloak.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "aivhub.fullname" . }}-aivkeycloak
  template:
    metadata:
      labels:
        app: {{ template "aivhub.fullname" . }}-aivkeycloak
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
        {{- with .Values.affinity }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets: {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
      containers:
        - env:
            - name: AIV_FRONT_GATEWAY
              value: https://{{ .Values.gateway.ingress.host }}
            - name: AIV_GATEWAY
              value: https://{{ .Values.gateway.ingress.host }}
            - name: AIV_KEY_CLOAK
              value: https://{{ .Values.aivsecuritykeycloak.ingress.host }}
            - name: SPRING_PROFILES_ACTIVE
              value: prod
          image: docker.io/library/aivsecuritykeycloak:{{ .Values.aivsecuritykeycloak.image.tag }}
          imagePullPolicy: {{ .Values.aivsecuritykeycloak.image.pullPolicy }}
          name: {{ .Chart.Name }}-aivkeycloak
          ports:
            - containerPort: 9000
          resources: 
            {{- if .Values.aivsecuritykeycloak.resources }}
              {{- toYaml .Values.aivsecuritykeycloak.resources | nindent 12 }}
            {{- else }}
              {{- toYaml .Values.resources | nindent 12 }}
            {{- end }}
          volumeMounts:
            - mountPath: /opt/repository
              name: repository
            - mountPath: /opt/logs
              name: logs
      restartPolicy: Always
      initContainers:
        - name: init-downloader
          image: amazon/aws-cli:latest
          command: ['sh', '-c', "aws s3 sync s3://{{ .Values.s3BucketRepository }}/repository/ /opt/repository"]
          env:
          - name: AWS_ACCESS_KEY_ID
            value: {{ .Values.aws.accessKey }}
          - name: AWS_SECRET_ACCESS_KEY
            value: {{ .Values.aws.secretKey }}
          - name: AWS_REGION
            value: {{ .Values.aws.region }}
          volumeMounts:
            - mountPath: /opt/repository
              name: repository-ps
      volumes:
        - name: repository-ps
          persistentVolumeClaim:
            claimName: {{ template "aivhub.fullname" . }}-pvc-repository
        - name: logs-ps
          persistentVolumeClaim:
            claimName: {{ template "aivhub.fullname" . }}-pvc-logs
{{- end -}}