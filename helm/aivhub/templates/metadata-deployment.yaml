apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ template "aivhub.fullname" . }}-metadata
  labels:
    app: {{ template "aivhub.fullname" . }}-metadata
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "-4"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "aivhub.fullname" . }}-metadata
  replicas: {{ .Values.metadata.replicaCount }}
  revisionHistoryLimit: 10
  minReadySeconds: 10
  strategy:
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "aivhub.fullname" . }}-metadata
        app: {{ template "aivhub.fullname" . }}-metadata
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
        {{- with .Values.affinity }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets: {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
      containers:
        - image: postgres:{{ .Values.metadata.image.tag }}
          imagePullPolicy: {{ .Values.metadata.image.pullPolicy }}
          name: {{ .Chart.Name }}-metadata
          ports:
            - containerPort: 5432
          resources: 
              {{- if .Values.metadata.resources }}
                {{- toYaml .Values.metadata.resources | nindent 12 }}
              {{- end }}
          env:
            - name: UID
              value: "0"
            - name: GID
              value: "0"
            - name: POSTGRES_PASSWORD
              value: "{{ .Values.postgres.Password }}"
            - name: POSTGRES_USER
              value: "{{ .Values.postgres.User }}"
            - name: POSTGRES_DB
              value: "{{ .Values.postgres.Db }}"
            - name: PGDATA
              value: "/var/lib/postgresql/data"
            - name: POSTGRES_MULTIPLE_DATABASES
              value: "aiv5,aiv_security"
          volumeMounts:
            - mountPath: /var/lib/postgresql/data:z
              name: pvc-metadata
              subPath: postgres
              readOnly: false
            - name: pg-config
              mountPath: /docker-entrypoint-initdb.d/
              readOnly: true
      volumes:
        - name: pg-config
          configMap:
            name: {{ template "aivhub.fullname" . }}-pg-config
        - name: pvc-metadata
          persistentVolumeClaim:
            claimName: {{ template "aivhub.fullname" . }}-pvc-metadata